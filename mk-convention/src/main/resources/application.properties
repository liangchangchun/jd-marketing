spring.application.name=mk-convention
server.port=9111


spring.profiles.active=native

spring.datasource.initialize=false
spring.datasource.url=jdbc:mysql://192.168.2.88:3306/lovego-jd?autoReconnect=true&useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false
spring.datasource.username=root
spring.datasource.password=admins
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

elasticsearch.clustername = elasticsearch
elasticsearch.hosts = 192.168.2.88
elasticsearch.port = 9300

#thymeleaf start
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.content-type=text/html
#\u5F00\u53D1\u65F6\u5173\u95ED\u7F13\u5B58,\u4E0D\u7136\u6CA1\u6CD5\u770B\u5230\u5B9E\u65F6\u9875\u9762
spring.thymeleaf.cache=false
#thymeleaf end


spring.devtools.restart.enabled= true
 #\u662F\u5426\u5F00\u542F\u5F00\u53D1\u8005\u5DE5\u5177\uFF08true/false\uFF09  \u7EBF\u4E0A\u4E3A false
#spring.devtools.restart.additional-paths= src/main/java
spring.devtools.restart.exclude= static/**,WEB-INF/view/**


spring.redis.database= 0
spring.redis.host= 192.168.99.100
spring.redis.port= 6379
spring.redis.password= Zww123456
spring.redis.timeout= 0

# Specify the DBMS
spring.jpa.database = MYSQL
# Show or not log for each sql query
spring.jpa.show-sql = true
# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update
# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
# stripped before adding them to the entity manager)
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
hibernate.temp.use_jdbc_metadata_defaults=false

clientId = QsVmMy8Qj0miyVlAADpm
clientSecret = 0lPMqOSJA26cKyob1AdW

grantType = access_token
jd.userName = \u4E50\u5BCC\u8D2DAPI
jd.passWord=jd.com

jd.openApi.host = https://bizapi.jd.com
jd.openApi.path = /oauth2
jd.getAccessToken = /oauth2/accessToken
jd.openApi.getPageNum = /api/product/getPageNum
jd.openApi.getSkuByPage = /api/product/getSkuByPage
jd.openApi.getDetail = /api/product/getDetail
jd.openApi.getImage = /api/product/skuImage
jd.openApi.getSkuState = /api/product/skuState
jd.openApi.getSellPrice=/api/price/getSellPrice
jd.openApi.getProvince=/api/area/getProvince
jd.openApi.getCity=/api/area/getCity
jd.openApi.getCounty=/api/area/getCounty
jd.openApi.getTown=/api/area/getTown
jd.openApi.getCategory = /api/product/getCategory
jd.openApi.cancelOrder = /api/order/cancel
jd.openApi.submitOrder = /api/order/submitOrder
#增值票收票人姓名
jd.openApi.invoiceName = 财务部
#增值票收票电话
jd.openApi.invoicePhone = 13671848569
#2 上海 增值票收票人所在省(京东地址编码)
jd.openApi.invoiceProvice = 2
#2830 浦东新区 增值票收票人所在市(京东地址编码)
jd.openApi.invoiceCity = 2830
#51827 书院镇 增值票收票人所在区/县(京东地址编码)
jd.openApi.invoiceCounty = 51827
#	增值票收票人所在地址
jd.openApi.invoiceAddress = 浦东新区书院镇石潭街109号238室
#发票抬头
jd.openApi.companyName = 上海乐辅电子商务有限公司
# 	开票方式(1 为随货开票，0 为订单预借，2 为集中开票 )
jd.openApi.invoiceState = 2
#1 普通发票 2 增值税发票 3 电子发票
jd.openApi.invoiceType = 1
#必须(发票类型：4 个人，5 单位)
jd.openApi.selectedInvoiceTitle = 5
#1明细，3：电脑配件，19:耗材，22：办公用品备注:若增值发票则只能选 1 明细
jd.openApi.invoiceContent = 1
#支付方式 (1：货到付款，2：邮局付款，4：余额支付，5：公司转账（公对公转账），7：网银钱包，101：金采支付)
jd.openApi.paymentType = 4
#使用余额 paymentType=4 时，此值固定是 1 其他支付方式 0
jd.openApi.isUseBalance = 1
#是否预占库存，0 是预占库存（需要调用确认订单接口），1 是不预占库存
jd.openApi.submitState = 1
#下单价格模式 0: 客户端订单价格快照不做验证对比，还是以京东价格正常下单;1:必需验证客户端单价格快照，如果快照与京东价格不一致返回下单失败，需要更新商品价格后，重新下单;
jd.openApi.doOrderPriceMode = 0
#是否需要赠品  需要设置开关
jd.openApi.bNeedGift = false

http.timeout=60000
http.defaultCharset=utf-8
http.connection.maxTotal=200
http.connection.defaultMaxPerRoute=50

#JD ApiLists
jd.OpenApi.Product.PageNum = getPageNum

jd.AccessToken = RMR44Ql3xqx9RW6Q1If6qNTNc

jd.openApi.getRefreshToken = /oauth2/refreshToken

#����refreshToken ����ʱ��2018-10-31-13:32:54
jd.refreshToken = XEf7Oi1EOzyPxMh7w0lEESa22RrFr2rz3GecgSFw
